name: VS2019-build

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    strategy:
      matrix:
        bitness: [Win32, x64]
        #buildtype: [Release, Debug]
        buildtype: [Release]

    steps:
    - uses: actions/checkout@v3

    - run: choco install vulkan-sdk

    - name: CMake Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build-${{matrix.buildtype}}-${{ matrix.bitness}} -DOPTION_VSG=On -DCMAKE_BUILD_TYPE=${{matrix.buildtype}} -A ${{ matrix.bitness}}

    - name: CMake Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build-${{matrix.buildtype}}-${{ matrix.bitness}} --config ${{matrix.buildtype}}  --target PACKAGE
      
    - uses: actions/upload-artifact@v3
      with:
       path: ${{ github.workspace }}/build-${{matrix.buildtype}}-${{ matrix.bitness}}/*.zip
       name: 3rdParty-vs2019-${{matrix.buildtype}}-${{ matrix.bitness}}.zip
       

      
